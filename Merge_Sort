package Sorting;

import java.util.Scanner;

public class Merge_Sort {

    // Divide and Sort the array
    public static int[] merge_Sort(int[] arr, int low, int high){
        if(low == high){
            int[] base = new int[1];
            base[0] = arr[low];
            return base;
        }
        int mid = (low + high) / 2;
        int[] first_Sorted_Half = merge_Sort(arr, low, mid);
        int[] second_Sorted_Half = merge_Sort(arr, mid + 1, high);
        int[] full_Sorted_Array = merge_Two_Sorted_Array(first_Sorted_Half, second_Sorted_Half);

        return full_Sorted_Array;
    }

     // To merge two sorted arrays
     public static int[] merge_Two_Sorted_Array(int[] arr1, int[] arr2){
        int[] result = new int[arr1.length + arr2.length];
        int i = 0;
        int j = 0;
        int k = 0;

        while(i < arr1.length && j < arr2.length){
            if(arr1[i] < arr2[j]){
                result[k] = arr1[i];
                i++;
                k++;
            } else{
                result[k] = arr2[j];
                j++;
                k++;
            }
        }
        while(i < arr1.length){
            result[k] = arr1[i];
            i++;
            k++;
        }
        while(j < arr2.length){
            result[k] = arr2[j];
            j++;
            k++;
        }
        return result;
    }

    // Displaying the  resultant array
    public static void display(int[] arr){
        for (int i : arr) {
            System.out.print(i+" ");
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int size = sc.nextInt();
        int[] arr = new int[size];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = sc.nextInt();
        }

        int low = 0;
        int high = arr.length - 1;

        int[] merged_Array = merge_Sort(arr, low, high);
        display(merged_Array);
        sc.close();
    }
}
